openapi: 3.0.3
info:
  title: Double Check
  description: Double Check is an easy to use service, that enables multifactor API for your applications using just an API. Your application users just need to interact with a **Telegram Bot** in order to receive the access token.
  version: 1.0.0
servers:
    - url : https://localhost:8080
tags:
  - name: Token
    description: To request or check access tokens

paths:
  /request_token:
    post:
      tags:
        - Token
      description: Requests a token to be sent to a specified user. User must be prior subscribed to Double Check bot before requesting a token.
      requestBody:
        description: Request a new user's token
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                site_name:
                  type: string
                username:
                  type: string
                action:
                  type: string

      responses:
        '202':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    token:
                      type: string
                    ttl:
                      type: string
                    status:
                      type: string

        '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                    errors:
                      type: string


  /check_token:
    post:
      tags:
        - Token
      description: Checks if the user's token is valid.
      requestBody:
        description: Check user's token is valid
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                user_token:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  is_valid:
                    type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  errors:
                    type: string
